[Actions]
; common Values for (un)installation
include_insert "common.opsiinc"

if not(HasMinimumSpace ("%SystemDrive%", $MinimumSpace$))
	LogError "Not enough space on %SystemDrive%, " + $MinimumSpace$ + " on drive %SystemDrive% needed for " + $ProductId$
	isFatalError
	; Stop process and set installation status to failed
else
	if FileExists("%ScriptPath%\delsub64.opsiscript")
		comment "Start uninstall sub section"
		Sub "%ScriptPath%\delsub64.opsiscript"
	endif

	Message "Installing %installingProdName% (%installingProdVersion%) 64 Bit..."
	
	Winbatch_install
	Set $ExitCode$ = getLastExitCode
	;der Exitcode 1223 wird gesetzt, obwohl die Installation richtig durchläuft
	if $ExitCode$ = "1223"
		Set $ExitCode$ = "0"
	endif
	if stringToBool(isNSISExitcodeFatal($ExitCode$, "True", $ErrorString$))
		isFatalError
    endif
	
	comment "Test for installation success"
	; Ergebnis ist StringList (mehrere Einträge möglich);
	; in einer Zeile werden drei Ergebnisse mit "|" abgetrennt geliefert: Registrykey (mit Pfad) | Bereich Registry (kann direkt getRegistryValue übergeben werden | DisplayName
	; z.B. HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Test64|64bit|Test Registry Entry64
	Set $ResultList$ = SearchRegistryUninstallKeys($ProductName$)

	if ( count ($ResultList$) = "0" )
		logError "Fatal: After Installation " + $ProductName$ + " could not be found in registry"
		isFatalError
	else
		Set $RegId$ = takeString (0,splitString(takeString(0,$ResultList$), '|'))
		Set $RegBitScope$ = takeString (1,splitString(takeString(0,$ResultList$), '|'))
		; DisplayName ermittelt die Suche, der Wert wird auch für das Desktop Icon verwendet
		Set $RegDisplayName$ = takeString (2,splitString(takeString(0,$ResultList$), '|'))

		Set $InstalledVersion$ = GetRegistryValue($RegId$, "DisplayVersion", $RegBitScope$)
		if not (contains($InstalledVersion$, $ProductVersion$))
			LogError "Wrong version number found, something went wrong."
			isFatalError
		endif

		comment "Get 'InstallLocation' from registry for path to exe"
		;hier wird UninstallProgam als Hilfsvariable benutzt, um den Pfad herauszufinden
		Set $UninstallProgram$ = GetRegistryValue($RegId$, "UninstallString", $RegBitScope$)
		Set $InstallDir$ = ExtractFilePath($UninstallProgram$)
		Set $PathToExe$ = $InstallDir$ + $Exe$
		
		; Installer legt automatisch Desktoplink an, ggf. löschen
		set $DesktopLink$ = getProductProperty("desktop-link","false")
		if $DesktopLink$ = "false"
			comment "delete by installer created desktop link"
			Linkfolder_delete_desktoplink
		endif
		
		comment "include custom post install file"
		set $CustomPostInstall$ = getProductProperty("custom-post-install","none")
		if not ($CustomPostInstall$ = "none")
			if FileExists("%ScriptPath%\custom\" + $CustomPostInstall$)
				include_insert "%ScriptPath%\custom\" + $CustomPostInstall$	
			endif
		endif
	endif	
endif

[Winbatch_install]
"%ScriptPath%\$InstFile$" /S

[Linkfolder_delete_desktoplink]
set_basefolder common_desktopdirectory
set_subfolder ""
delete_element $RegDisplayName$

